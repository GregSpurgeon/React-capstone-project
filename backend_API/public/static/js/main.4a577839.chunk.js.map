{"version":3,"sources":["components/assets/cyclelogo2.png","components/group-grid/GroupGrid.js","components/sign-in/SignIn.js","components/register/Register.js","components/navigationBar/NavigationBar.js","screens/HomeSignedIn.js","screens/HomeSignedOut.js","screens/NotFound.js","components/event-list/EventList.js","components/group-banner/GroupBanner.js","screens/GroupPage.js","components/navigation/Navigation.js","App.js","serviceWorker.js","redux/reducers/index.js","index.js"],"names":["module","exports","GroupGrid","id","className","to","src","alt","SignIn","useState","username","password","userSignIn","setState","handleLogin","event","console","log","trigger","Button","variant","modal","close","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","Text","Register","displayName","passwordConfirmation","error","isSubmitted","userRegister","NavigationBar","Fragment","Navbar","expand","Col","xs","md","Image","cyclelogo2","roundedCircle","Toggle","aria-controls","Collapse","Nav","inline","Link","href","HomeSignedIn","HomeSignedOut","NotFound","EventList","useParams","groupName","Card","Header","as","Body","Subtitle","Title","GroupBanner","Container","fluid","Row","rounded","GroupPage","Navigation","path","component","exact","App","Boolean","window","location","hostname","match","combineReducers","store","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4a577839.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cyclelogo2.b5aa3a94.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './GroupGrid.css'\n\nexport const GroupGrid = () => {\n\n    return (\n        <div id=\"groupContent\">\n            <h5>Groups Near You</h5>\n            <section id=\"grid\">\n                <div className=\"column\">\n                    <Link to=\"/group/:testGroup1\">\n                        <img src=\"https://i.ytimg.com/vi/FpGGIA2j0c4/maxresdefault.jpg\" alt=\"\" />\n                    </Link>\n                    <Link to=\"/group/:testGroup2\">\n                        <img src=\"https://i.ytimg.com/vi/FpGGIA2j0c4/maxresdefault.jpg\" alt=\"\" />\n                    </Link>\n                    <Link to=\"/group/:testGroup3\">\n                        <img src=\"https://i.ytimg.com/vi/FpGGIA2j0c4/maxresdefault.jpg\" alt=\"\" />\n                    </Link>\n                </div>\n                <div className=\"column\">\n                    <Link to=\"/group/:testGroup4\">\n                        <img src=\"https://i.ytimg.com/vi/FpGGIA2j0c4/maxresdefault.jpg\" alt=\"\" />\n                    </Link>\n                    <Link to=\"/group/:testGroup5\">\n                        <img src=\"https://i.ytimg.com/vi/FpGGIA2j0c4/maxresdefault.jpg\" alt=\"\" />\n                    </Link>\n                    <Link to=\"/group/:testGroup6\">\n                        <img src=\"https://i.ytimg.com/vi/FpGGIA2j0c4/maxresdefault.jpg\" alt=\"\" />\n                    </Link>\n                </div>\n                <div className=\"column\">\n                    <Link to=\"/group/:testGroup7\">\n                        <img src=\"https://i.ytimg.com/vi/FpGGIA2j0c4/maxresdefault.jpg\" alt=\"\" />\n                    </Link>\n                    <Link to=\"/group/:testGroup8\">\n                        <img src=\"https://i.ytimg.com/vi/FpGGIA2j0c4/maxresdefault.jpg\" alt=\"\" />\n                    </Link>\n                    <Link to=\"/group/:testGroup9\">\n                        <img src=\"https://i.ytimg.com/vi/FpGGIA2j0c4/maxresdefault.jpg\" alt=\"\" />\n                    </Link>\n                </div>\n            </section>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport Popup from 'reactjs-popup'\nimport { Form, Button } from 'react-bootstrap'\nimport './SignIn.css';\n\n\nexport const SignIn = () => {\n    const [userSignIn, setState] = useState({\n        username: '',\n        password: ''\n    })\n\n    const handleLogin = (event) => {\n        // May have to prevent the default depending on how this loads\n        // event.preventDefault()\n        console.log('Sign In')\n        setState(userSignIn)\n    }\n\n    return (\n        <Popup id=\"popup\" trigger={<Button variant=\"link\">Sign In</Button>} modal>\n            {close => (\n                <Form id=\"form\" onSubmit={handleLogin}>\n                    <h2 id=\"logo\">Logo</h2>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control required type=\"email\" placeholder=\"Enter email\" />\n                        <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                    </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control required type=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        {/* <Form.Check type=\"checkbox\" label=\"Save Password\" /> */}\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\" >\n                        Submit\n                </Button>\n                </Form>\n\n\n            )}\n        </Popup>\n    )\n}","import React, { useState } from 'react'\nimport Popup from 'reactjs-popup'\nimport { Form, Button } from 'react-bootstrap'\nimport { Redirect } from 'react-router-dom'\nimport './Register.css';\n\n\nexport const Register = () => {\n    const [userRegister, setState] = useState({\n        username: '',\n        displayName: '',\n        password: '',\n        passwordConfirmation: '',\n        error: [],\n        isSubmitted: false\n    })\n\n    const handleLogin = (event) => {\n        // May have to prevent the default depending on how this loads\n        // event.preventDefault()\n        console.log('Sign In')\n        setState(userRegister)\n    }\n\n    return (\n        <Popup id=\"popup\" trigger={<Button variant=\"link\">Register</Button>} modal>\n            {close => (\n                <Form id=\"form\" onSubmit={handleLogin}>\n                    <h2 id=\"logo\">Logo</h2>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control required type=\"email\" placeholder=\"Enter email\" />\n                        <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"validationCustomUsername\">\n                        <Form.Label>Display Name</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"Display Name\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control required type=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control required type=\"password\" placeholder=\"Confirm Password\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        {/* <Form.Check type=\"checkbox\" label=\"Save Password\" /> */}\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\" >\n                        Submit\n                    </Button>\n\n                </Form>\n            )}\n            {/* TODO: If form filled, redirect to HomeSignedIn */}\n            {/* {userRegister.isSubmitted ? <Redirect to=\"/\" /> : null} */}\n        </Popup>\n    )\n}","import React from 'react';\nimport { Form, Col, Image, Nav, Navbar } from 'react-bootstrap';\nimport cyclelogo2 from \"../assets/cyclelogo2.png\"\nimport { SignIn } from '../sign-in'\nimport { Register } from '../register'\nimport './NavigationBar.css';\n\n\nexport const NavigationBar = () => {\n  return (\n    <React.Fragment>\n      <Navbar className=\"nav-bar\" expand=\"lg\">\n        <Col xs={6} md={4}>\n          <Image src={cyclelogo2} alt=\"logo\" roundedCircle />\n        </Col>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n\n          </Nav>\n          <Form inline>\n            <Nav.Link className=\"nav-links\" href=\"/\">Home</Nav.Link>\n            <SignIn />\n            <Register />\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n    </React.Fragment>\n  );\n}\n\n","import React from \"react\"\nimport { GroupGrid } from '../components/group-grid'\n\nimport { NavigationBar } from \"../components/navigationBar\"\n\n\n\nexport const HomeSignedIn = () => (\n    <div className=\"home\">\n        <NavigationBar />\n        <GroupGrid />\n    </div>\n)","import React from \"react\"\nimport { GroupGrid } from '../components/group-grid'\n\nimport './Home.css'\nimport { NavigationBar } from \"../components/navigationBar\"\n\nexport const HomeSignedOut = () => (\n    <div className=\"home\">\n        <NavigationBar />\n        <GroupGrid />\n    </div>\n)","import React from \"react\"\n\nexport const NotFound = () => (\n    <div className=\"not-found\">\n        <h1>Not Found</h1>\n    </div>\n)","import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { useParams } from 'react-router-dom'\nimport './EventList.css'\n\nexport const EventList = () => {\n    const { groupName } = useParams()\n    return (\n        <Card>\n            <Card.Header as=\"h5\">Events</Card.Header>\n            {/* Map over events and populate card body */}\n            {/* array.map(item => {}) */}\n            <Card.Body>\n                <Card.Subtitle className=\"mb-2 text-muted\">Date</Card.Subtitle>\n                <Card.Title>Event Name</Card.Title>\n                <Card.Text>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In consectetur arcu enim, sed accumsan urna gravida at. Nulla semper nisi a justo auctor, at consequat dolor luctus. Aliquam sagittis massa ut tellus rutrum tincidunt ac vel arcu. Pellentesque mattis gravida mauris, id suscipit sapien sodales vitae. Vivamus porta erat sit amet semper aliquam. Vestibulum aliquet mollis ultricies.\n                </Card.Text>\n                <Button variant=\"primary\">Go to event page</Button>\n            </Card.Body>\n        </Card>\n    )\n}","import React from 'react'\nimport { Row, Container, Col, Card, Image, Button } from 'react-bootstrap'\nimport './GroupBanner.css'\n\nexport const GroupBanner = () => {\n  return (\n    <div className=\"groupBanner\">\n\n      <Container fluid>\n\n        <Row>\n          <Col md={true}>\n            <Card>\n              <Card.Header>Group Name</Card.Header>\n              <Card.Body>\n                <Card.Title>About</Card.Title>\n                <Card.Text>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. In consectetur arcu enim, sed accumsan urna gravida at. Nulla semper nisi a justo auctor, at consequat dolor luctus. Aliquam sagittis massa ut tellus rutrum tincidunt ac vel arcu. Pellentesque mattis gravida mauris, id suscipit sapien sodales vitae. Vivamus porta erat sit amet semper aliquam. Vestibulum aliquet mollis ultricies.\n          </Card.Text>\n                <Card.Title>Location</Card.Title>\n                <Card.Text>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n          </Card.Text>\n                <Button className=\"button\" variant=\"primary\">Join</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n\n            <Image src=\"https://thumbs.dreamstime.com/b/cyclists-bike-race-banner-style-colorful-illustration-bunch-taking-part-white-background-56476672.jpg\" rounded />\n\n          </Col>\n        </Row>\n      </Container>\n\n    </div>\n  )\n}","import React from 'react';\nimport { EventList } from '../components/event-list';\nimport { GroupBanner } from '../components/group-banner';\nimport { NavigationBar } from '../components/navigationBar';\n\n\n\nexport const GroupPage = () => (\n  <div className='group'>\n    <NavigationBar />\n    <GroupBanner />\n    <EventList />\n  </div>\n);\n","import React from 'react'\nimport { HomeSignedOut, NotFound, GroupPage, HomeSignedIn } from \"../../screens\"\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nexport const Navigation = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/group/:groupName\" component={GroupPage} />\n                <Route path=\"/registered\" component={HomeSignedIn} />\n                <Route exact path=\"/\" component={HomeSignedOut} />\n                <Route path=\"*\" component={NotFound} />\n            </Switch>\n        </Router>\n    )\n}\n","import React from 'react';\n\n// TODO: ADD REDUX STORE\n\nimport { Navigation } from \"./components/navigation\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <>\n      <Navigation />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux'\n// import reducers\n\nexport default combineReducers({\n    // add reducers\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux'\n\n// Issue with configure store, no need to fix for now\n// import configureStore from './redux/configureStore'\n\nimport rootReducer from './redux/reducers'\nimport { Provider } from 'react-redux'\n\n\n// const { store } = configureStore()\nconst store = createStore(rootReducer)\nwindow.store = store\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}